/*!
\file
\brief Заголовочный файл с описанием класса хэш-таблицы

Данный файл содержит в себе определение класса хэш-таблицы
*/

#ifndef HASHTABLE_H
#define HASHTABLE_H
 
#include "HNode.h" 
 
/*!
	\brief Класс, отражающий хэш-таблицу

	Данный класс описывает хэш-таблицу   
*/ 
class HashTable{
	HNode **nodes; ///< Массив указателей на ноды
	int size; ///< Размер таблицы

	/*!
		\brief Вспомогательный метод для подсчета хэша по ключу

		Хэш вычисляется по функции ROT13
		
		\param[in] key Ключ, хэш которого необходим
	*/
	unsigned int calc_hash(const string &key);
	
	/*!
		\brief Вспомогательный метод для нахождения индекса при вставке 
		
		Данный метод вычисляет индекс вставляемого элемента на основе хэша его ключа.
		Для разрешения коллизий используется метод линейной пробации.
		
		\param[in] ind Хэш ключа элемента 
	*/
	unsigned int calc_index(unsigned int ind);
	
public:
	
	/*! \brief Конструктор таблицы
		
		\param[in] s Размер таблицы  
	*/
	HashTable(int s);
	
	/// Деструктор
	~HashTable();

	/*!
		\brief Метод вставки элемента в таблицу  
		
		\param[in] data Данные, присваемые вставляемому элементу		
	*/
	void insert(Worker data);
	
	/*!
		\brief Метод поиска ноды по ключу 
		
		\param[in] key Искомый ключ
		
		\return Бинарный результат поиска
	*/
	bool find(const string &key);	
};
 
#endif

